extern crate assert_cli;

#[test]
fn sample1() {
    assert_cli::Assert::main_binary()
        .stdin("1212")
        .stdout()
        .is("6")
        .unwrap();
}

#[test]
fn sample2() {
    assert_cli::Assert::main_binary()
        .stdin("1221")
        .stdout()
        .is("0")
        .unwrap();
}

#[test]
fn sample3() {
    assert_cli::Assert::main_binary()
        .stdin("123425")
        .stdout()
        .is("4")
        .unwrap();
}

#[test]
fn sample4() {
    assert_cli::Assert::main_binary()
        .stdin("123123")
        .stdout()
        .is("12")
        .unwrap();
}

#[test]
fn sample5() {
    assert_cli::Assert::main_binary()
        .stdin("12131415")
        .stdout()
        .is("4")
        .unwrap();
}

#[test]
fn puzzle1() {
    assert_cli::Assert::main_binary()
        .stdin(
            "\
        2175234281493376693817212167497687911136241765326152235785581689365646244916837735928524481\
        8489723869987861247912289729579296691684761143544956991583942215236568961875851755854977946\
        1471787464646752276991499252272271375574797699485697888843993798211113825367226995757594744\
        7327393975634899271466796359618976573474316948959912577144334819338356615984359354113474939\
        2569865481578359825844394454173219857919349341442148282229689541561169341622222354651397342\
        9286784964786713393839237698564257952113236733897231819679339338327115458856539528618792315\
        3797629251786635481294319272826326952473569842333667373515899385355614883386132795926225475\
        6647827739145283577793481526768156921138428318939361859721778556264519643435871835744859243\
        1672278895627387129536511283176246739852135258975223782591786254167221521557286159365873695\
        1525493682866856485728322643988126687194599879648847224918253888335418657392518315266386268\
        3995449671663285775397453876262722567452435914777363522817594741946638986571793655889466419\
        8959969241229157772244994814968373431941491237353552681519417128712458635538369533498878319\
        4978886985292914784948926532584393466999939184628631926868678937251397652228258752686614816\
        6337215961493536262851512218794139272361292811529888161198799297966893366553115353639298256\
        7888193852724711872135791855235213416511179476767853411462354414114418132425148132278218438\
        1942461997497988687164662191886527457453895176156785584568127236464613858471633359984383516\
        7373525248547542442942583122624534494442516259616973235858469131159773167334953658673271599\
        7489429569819546994445286896288486944468188254654851228697428397114711298626321286357796583\
        6575636286362713598361761333284975637198637696711754925156628199296457392965558931387197655\
        6784849231916513831538254812347116253949818633527185174221565279775766742262687713114114344\
        8435349588333726341821768663154415838871777592225988537351141918742777114346538548168415892\
        2991416468136449742932446319366933782746766177383351784176371115637614766474917526721256232\
        1567728575765844893232718971471289841171642868948852136818661741238178676857381583155547755\
        219837116125995361896562498721571413742",
        )
        .stdout()
        .is("1420")
        .unwrap();
}
